name: Docker Compose Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure DNS
        run: |
          echo "nameserver 8.8.8.8" | sudo tee /etc/resolv.conf > /dev/null
          echo "nameserver 8.8.4.4" | sudo tee -a /etc/resolv.conf > /dev/null

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
          driver-opts: |
            image=moby/buildkit:latest

      - name: Set up Docker Compose
        uses: ndeloof/install-compose-action@v0.0.1
        with:
          version: v2.20.3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_REGISTRY }}/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=,suffix=,format=short
            type=ref,event=branch
            type=ref,event=pr

      - name: Verify DNS and Registry Connection
        run: |
          # Test DNS resolution
          nslookup ${{ secrets.DOCKER_REGISTRY }}
          # Test registry connection
          curl -v https://${{ secrets.DOCKER_REGISTRY }}/v2/ || true

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Enable BuildKit
      - name: Enable BuildKit
        run: |
          echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      - name: Docker Compose Build
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1
        run: |
          docker-compose -f docker-compose.dev.yml build \
            --build-arg BUILD_VERSION=${{ steps.meta.outputs.version }} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${{ github.sha }}

      - name: Docker Compose Push
        run: |
          docker-compose -f docker-compose.dev.yml push

      - name: Cleanup
        if: always()
        run: |
          docker-compose -f docker-compose.dev.yml down -v
          docker system prune -f